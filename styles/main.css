/* External CSS styles go here */
@import url('constants.css');

:root {
    --piece-count: var(--js-piece-count, 9);
    --board-size: var(--js-board-size, 300px);

    --piece-sqrt: calc(sqrt(var(--piece-count)));
    --piece-size: calc(var(--board-size) / var(--piece-sqrt));
  }

h1{
    font-size: 2em;
    color: var(--text-color);
}



body {
    font-family: var(--font-family);
    font-weight: bold;
    color: var(--text-color);
    background-color: var(--background-color);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 0;
}

main{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 0;
}

#settings {
    display: flex;
    align-items: center;
}

#settings > * {
    margin-right: 1.5em;
}

#settings > label{
    margin-right: 0.3em;
}

#settings > input{
    margin-right: 0.5em;
}

#start-txt {
    text-align: center;
    position: fixed;
    padding: 10px 20px;
    border-radius: 10px;
    border: 2px solid var(--light-color);
    background-color: var(--secondary-color);
    color: var(--text-color);
    font-size: 20px;
    transform: translate(-50%, -50%);
    z-index: 2;
    visibility: visible;
}

#puzzle-start{
    z-index: 2;
}


#puzzle {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin: 0;
    margin-top: 2em;
    gap: 1em;
}

#start-btn {
    margin-bottom: 10px;
    margin: -2em;
    padding: 20px;
    border-radius: 5px;
    background-color: var(--correct-color);
    color: var(--secondary-color);
    border: 1px solid var(--secondary-color);
    cursor: pointer;
    z-index: 2;
    visibility: visible;
}

#puzzle-container {
    background-color: var(--primary-color);
    display: grid;
    grid-template-columns: repeat(var(--piece-sqrt), var(--piece-size));
    min-width: var(--board-size);
    min-height: var(--board-size);
    max-width: fit-content;
    max-height: fit-content;
    gap: 5px;
}


.puzzle-piece {
    width: var(--piece-size);
    height: var(--piece-size);
    background-size: var(--board-size) var(--board-size);
    cursor: pointer;
}

#puzzle-board {
    display: grid;
    grid-template-columns: repeat(var(--piece-sqrt), var(--piece-size));
    gap: 5px;
    padding-right: 2px;
    max-width: fit-content;
    border: 3px solid var(--light-color); /* Border around the puzzle board */
}

.drop-target {
    background-color: var(--primary-color); /* Highlight color for drop areas */
    height: var(--piece-size);
    width: var(--piece-size);
    border: 1px solid var(--secondary-color);
    position: relative;
}

.selected-piece {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
}

#solved-screen {
    background-color: var(--correct-color);
    color: var(--secondary-color);
    border-radius: 10px;
    text-align: center;
    position: fixed;
    padding-left: 20px;
    padding-right: 20px;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 20px;
    z-index: 3;
    visibility: hidden;
    opacity: 0;
}

  #solved-screen.show {
    animation: anime 7s 1;
}

  @keyframes anime {
    0% {
        opacity: 1;
        visibility: visible;
    }
    75% {
        opacity: 1;
        visibility: visible;
    }
    100% {
        opacity: 0;
        visibility: hidden;
    }
}

/*********************************************************/
@media (max-width: 45rem){
    #puzzle {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin: 0;
        gap: 1em;
    }

    #settings {
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
    }

    #settings > * {
        margin-bottom: 1em;
        margin-right: 1em;
    }

    #settings > input{
        margin-right: 0;
    }
}

/* Auch @media (min-device-width: 60rem) { */
/* Einstellungen, die erst bei einer Anzeige mit einer Breite von mindestens 40 Zeichen der Schriftgröße wirken */
@media (min-width: 60rem){
	
}